name: Build Executables

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'

    - name: Install uv
      run: |
        python -m pip install --upgrade pip
        python -m pip install uv

    - name: Install dependencies
      run: |
        uv sync --dev

    - name: Run ruff checks
      run: |
        uv run ruff check .
        uv run ruff format --check .

  build:
    needs: lint
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            platform: linux
          - os: windows-latest
            platform: windows
          - os: macos-latest
            platform: macos

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'

    - name: Install Linux dependencies
      if: matrix.platform == 'linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgl1 libxcb-xinerama0 libxcb-cursor0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xkb1 libxkbcommon-x11-0

    - name: Install uv
      run: |
        python -m pip install --upgrade pip
        python -m pip install uv

    - name: Install dependencies
      run: |
        uv sync --dev

    - name: Build with PyInstaller
      run: |
        uv run pyinstaller \
          --name "CoGSaver" \
          --windowed \
          --onedir \
          --clean \
          --noconfirm \
          cog_saver.py

    - name: Create archive (Windows)
      if: matrix.platform == 'windows'
      run: |
        Compress-Archive -Path dist/CoGSaver/* -DestinationPath CoGSaver-${{ matrix.platform }}.zip

    - name: Create archive (Linux/macOS)
      if: matrix.platform != 'windows'
      run: |
        cd dist
        tar -czf ../CoGSaver-${{ matrix.platform }}.tar.gz CoGSaver/

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: CoGSaver-${{ matrix.platform }}
        path: |
          CoGSaver-*.zip
          CoGSaver-*.tar.gz

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Display structure
      run: ls -la

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.run_number }}
        name: Release Build ${{ github.run_number }}
        draft: false
        prerelease: false
        files: |
          CoGSaver-*/*.zip
          CoGSaver-*/*.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}